{"mappings":"AACA,IAAIA,EAAS,GAEbC,eAAeC,IACbF,EAAS,sDAAsDG,wDAC/D,IACE,MAAMC,QAAiBC,MAAML,IASjC,SAAwBM,GACtB,MAAMC,EAAgBC,SAASC,eAAe,oBAC9CF,EAAcG,UAAY,GAE1B,MAAMC,EAAS,GAETC,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAY,GAEtCT,EAAKU,KAAKC,SAAQC,IAChB,MAAMC,EAAO,IAAIN,KAAe,IAAVK,EAAKE,IACrBC,EAAMF,EAAKG,eAEbH,GAAQP,IACLD,EAAOU,KACVV,EAAOU,GAAO,IAGhBV,EAAOU,GAAKE,KAAKL,G,IAIrB,IAAK,MAAMM,KAAOb,EAAQ,CACHH,SAASiB,cAAc,OAC/BC,UAAUC,IAAI,yBAC3B,MAAMC,EAAYjB,EAAOa,GAAK,GACxBK,EAAUrB,SAASiB,cAAc,OACvCI,EAAQH,UAAUC,IAAI,aACtB,MAAMG,EAAatB,SAASiB,cAAc,OAC1CK,EAAWJ,UAAUC,IAAI,OACzBG,EAAWpB,UAAY,yBAAyBqB,EAC9CH,EAAUR,+BACiBY,EAC3B,IAAInB,KAAoB,IAAfe,EAAUR,aAErBS,EAAQI,YAAYH,GAEpB,MAAMI,EAAc1B,SAASiB,cAAc,OAC3CS,EAAYR,UAAUC,IAAI,UAC1B,MACMQ,EAAU,qCADCP,EAAUQ,QAAQ,GAAGC,cAEtCH,EAAYI,IAAMH,EAClBD,EAAYK,IAAM,eAClBV,EAAQI,YAAYC,GAEpB,MAAMM,EAAqBhC,SAASiB,cAAc,OAClDe,EAAmBd,UAAUC,IAAI,eAEjC,MAAMc,EAAUC,KAAKC,MAAMf,EAAUgB,KAAKC,UACpCC,EAAUJ,KAAKC,MAAMf,EAAUgB,KAAKG,UAC1CP,EAAmB9B,UAAY,iIACmB+B,yLACJK,sBAC9CjB,EAAQI,YAAYO,GACpB,MAAMQ,EAAaxC,SAASiB,cAAc,UAC1CuB,EAAWtB,UAAUC,IAAI,YACzBqB,EAAWtC,UAAY,YACvBmB,EAAQI,YAAYe,GACpBzC,EAAc0B,YAAYJ,E,EAhE1BoB,OAFmB7C,EAAS8C,O,CAG5B,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,E,EAkElD,SAASpB,EAAasB,GAWpB,MATmB,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YARW,IAAIxC,KAAiB,IAAZwC,GAUCC,S,CAGzB,SAAStB,EAAWb,GAElB,OAAOA,EAAKoC,mBAAmB,QADf,CAAEC,MAAO,QAASnC,IAAK,W,CAGzC,MAAMoC,EAAiBjD,SAASkD,cAAc,qBAC9C,IAAIvD,EAAO,GAEXsD,EAAeE,iBAAiB,SAAS,WACvCxD,EAAOsD,EAAeG,K,IAGDpD,SAASC,eAAe,aAChCkD,iBAAiB,SAAS,WACfnD,SAASkD,cAAc,oBAC/BG,MAAMC,gBAAkB,YACtBtD,SAASkD,cAAc,WAC/BG,MAAME,QAAU,QACHvD,SAASkD,cAAc,qBACfE,MAC/B1D,G,IAEF,MAAM8D,EAAYxD,SAASkD,cAAc,WACnCO,EAAUzD,SAASkD,cAAc,oBAEvCM,EAAUL,iBAAiB,SAAS,WAClCM,EAAQJ,MAAME,QAAU,M","sources":["src/five-days.js"],"sourcesContent":["const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\nlet apiUrl = '';\n\nasync function fetchWeatherData() {\n  apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    updateForecast(data);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n}\n\nfunction updateForecast(data) {\n  const forecastItems = document.getElementById('weather-forecast');\n  forecastItems.innerHTML = '';\n\n  const dayMap = {};\n\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000);\n    const day = date.toDateString();\n\n    if (date >= tomorrow) {\n      if (!dayMap[day]) {\n        dayMap[day] = [];\n      }\n\n      dayMap[day].push(item);\n    }\n  });\n\n  for (const day in dayMap) {\n    const forecastItem = document.createElement('div');\n    forecastItem.classList.add('weather-forecast-item');\n    const firstItem = dayMap[day][0];\n    const allInfo = document.createElement('div');\n    allInfo.classList.add('all-about');\n    const dayElement = document.createElement('div');\n    dayElement.classList.add('day');\n    dayElement.innerHTML = `<div class=\"day-name\">${getDayOfWeek(\n      firstItem.dt\n    )}</div> <div class=\"date\">${formatDate(\n      new Date(firstItem.dt * 1000)\n    )}</div>`;\n    allInfo.appendChild(dayElement);\n\n    const iconElement = document.createElement('img');\n    iconElement.classList.add('w-icon');\n    const iconCode = firstItem.weather[0].icon;\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    iconElement.src = iconUrl;\n    iconElement.alt = 'weather-icon';\n    allInfo.appendChild(iconElement);\n\n    const temperatureElement = document.createElement('div');\n    temperatureElement.classList.add('temperature');\n\n    const minTemp = Math.round(firstItem.main.temp_min);\n    const maxTemp = Math.round(firstItem.main.temp_max);\n    temperatureElement.innerHTML = `<div class=\"temperature__deg\"><div class=\"temperature__design\">min</div>\n                    <div class=\"temperature__data\"> ${minTemp}&deg;C</div></div><span class=\"temperature__line\"></span><div class=\"temperature__deg\"><div class=\"temperature__design\" > max</div>\n                <div class=\"temperature__data\"> ${maxTemp}&deg;C</div></div>`;\n    allInfo.appendChild(temperatureElement);\n    const moreButton = document.createElement('button');\n    moreButton.classList.add('more-btn');\n    moreButton.innerHTML = 'more info';\n    allInfo.appendChild(moreButton);\n    forecastItems.appendChild(allInfo);\n  }\n}\n\nfunction getDayOfWeek(timestamp) {\n  const date = new Date(timestamp * 1000);\n  const daysOfWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return daysOfWeek[date.getDay()];\n}\n\nfunction formatDate(date) {\n  const options = { month: 'short', day: 'numeric' };\n  return date.toLocaleDateString('en-US', options);\n}\nconst searchBarInput = document.querySelector('.search-bar_input');\nlet city = '';\n\nsearchBarInput.addEventListener('input', function () {\n  city = searchBarInput.value;\n});\n\nconst fiveDaysButton = document.getElementById('five-days');\nfiveDaysButton.addEventListener('click', function () {\n  const backgroundColor = document.querySelector('.future-forecast');\n  backgroundColor.style.backgroundColor = '#102136cc';\n  const cancelBtn = document.querySelector('.cancel');\n  cancelBtn.style.display = 'block';\n  const searchBarInput = document.querySelector('.search-bar_input');\n  const newCity = searchBarInput.value;\n  fetchWeatherData(newCity);\n});\nconst cancelBtn = document.querySelector('.cancel');\nconst display = document.querySelector('.future-forecast');\n\ncancelBtn.addEventListener('click', function () {\n  display.style.display = 'none';\n});\n"],"names":["$2c73bca0d48a5792$var$apiUrl","async","$2c73bca0d48a5792$var$fetchWeatherData","$2c73bca0d48a5792$var$city","response","fetch","data","forecastItems","document","getElementById","innerHTML","dayMap","tomorrow","Date","setDate","getDate","list","forEach","item","date","dt","day","toDateString","push","day1","createElement","classList","add","firstItem","allInfo","dayElement","$2c73bca0d48a5792$var$getDayOfWeek","$2c73bca0d48a5792$var$formatDate","appendChild","iconElement","iconUrl","weather","icon","src","alt","temperatureElement","minTemp","Math","round","main","temp_min","maxTemp","temp_max","moreButton","$2c73bca0d48a5792$var$updateForecast","json","error","console","timestamp","getDay","toLocaleDateString","month","$2c73bca0d48a5792$var$searchBarInput","querySelector","addEventListener","value","style","backgroundColor","display","$2c73bca0d48a5792$var$cancelBtn","$2c73bca0d48a5792$var$display"],"version":3,"file":"index.49de60f9.js.map"}