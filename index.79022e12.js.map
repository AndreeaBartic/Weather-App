{"mappings":"AAEA,IAAIA,EAAS,GA4Eb,SAASC,EAAaC,GAWpB,MATmB,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YARW,IAAIC,KAAiB,IAAZD,GAUCE,S,CAGzB,SAASC,EAAWC,GAElB,OAAOA,EAAKC,mBAAmB,QADf,CAAEC,MAAO,QAASC,IAAK,W,CAGzC,MAAMC,EAAiBC,SAASC,cAAc,qBAE9CF,EAAeG,iBAAiB,SAAS,WACvCC,KAAOJ,EAAeK,K,IA/FxBC,iBACEhB,EAAS,sDAAsDc,2DAC/D,IACE,MAAMG,QAAiBC,MAAMlB,IASjC,SAAwBmB,GACtB,MAAMC,EAAgBT,SAASU,eAAe,oBAC9CD,EAAcE,UAAY,GAE1B,MAAMC,EAAS,GAETC,EAAW,IAAIrB,KACrBqB,EAASC,QAAQD,EAASE,UAAY,GAEtCP,EAAKQ,KAAKC,SAAQC,IAChB,MAAMvB,EAAO,IAAIH,KAAe,IAAV0B,EAAKC,IACrBrB,EAAMH,EAAKyB,eAEbzB,GAAQkB,IACLD,EAAOd,KACVc,EAAOd,GAAO,IAGhBc,EAAOd,GAAKuB,KAAKH,G,IAIrB,IAAK,MAAMI,KAAOV,EAAQ,CACHZ,SAASuB,cAAc,OAC/BC,UAAUC,IAAI,yBAC3B,MAAMC,EAAYd,EAAOU,GAAK,GACxBK,EAAU3B,SAASuB,cAAc,OACvCI,EAAQH,UAAUC,IAAI,aACtB,MAAMG,EAAa5B,SAASuB,cAAc,OAC1CK,EAAWJ,UAAUC,IAAI,OACzBG,EAAWjB,UAAY,yBAAyBrB,EAC9CoC,EAAUP,+BACiBzB,EAC3B,IAAIF,KAAoB,IAAfkC,EAAUP,aAErBQ,EAAQE,YAAYD,GAEpB,MAAME,EAAc9B,SAASuB,cAAc,OAC3CO,EAAYN,UAAUC,IAAI,UAC1B,MACMM,EAAU,qCADCL,EAAUM,QAAQ,GAAGC,cAEtCH,EAAYI,IAAMH,EAClBD,EAAYK,IAAM,eAClBR,EAAQE,YAAYC,GAEpB,MAAMM,EAAqBpC,SAASuB,cAAc,OAClDa,EAAmBZ,UAAUC,IAAI,eAEjC,MAAMY,EAAUC,KAAKC,MAAMb,EAAUc,KAAKC,UACpCC,EAAUJ,KAAKC,MAAMb,EAAUc,KAAKG,UAC1CP,EAAmBzB,UAAY,iIACmB0B,yLACJK,sBAC9Cf,EAAQE,YAAYO,GACpB,MAAMQ,EAAa5C,SAASuB,cAAc,UAC1CqB,EAAWpB,UAAUC,IAAI,YACzBmB,EAAWjC,UAAY,YACvBgB,EAAQE,YAAYe,GACpBnC,EAAcoB,YAAYF,E,EAhE1BkB,OAFmBvC,EAASwC,O,CAG5B,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,E,EA0FlDE","sources":["src/five-days.js"],"sourcesContent":["const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\n\nlet apiUrl = '';\n\nasync function fetchWeatherData() {\n  apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    updateForecast(data);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n}\n\nfunction updateForecast(data) {\n  const forecastItems = document.getElementById('weather-forecast');\n  forecastItems.innerHTML = '';\n\n  const dayMap = {};\n\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000);\n    const day = date.toDateString();\n\n    if (date >= tomorrow) {\n      if (!dayMap[day]) {\n        dayMap[day] = [];\n      }\n\n      dayMap[day].push(item);\n    }\n  });\n\n  for (const day in dayMap) {\n    const forecastItem = document.createElement('div');\n    forecastItem.classList.add('weather-forecast-item');\n    const firstItem = dayMap[day][0];\n    const allInfo = document.createElement('div');\n    allInfo.classList.add('all-about');\n    const dayElement = document.createElement('div');\n    dayElement.classList.add('day');\n    dayElement.innerHTML = `<div class=\"day-name\">${getDayOfWeek(\n      firstItem.dt\n    )}</div> <div class=\"date\">${formatDate(\n      new Date(firstItem.dt * 1000)\n    )}</div>`;\n    allInfo.appendChild(dayElement);\n\n    const iconElement = document.createElement('img');\n    iconElement.classList.add('w-icon');\n    const iconCode = firstItem.weather[0].icon;\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    iconElement.src = iconUrl;\n    iconElement.alt = 'weather-icon';\n    allInfo.appendChild(iconElement);\n\n    const temperatureElement = document.createElement('div');\n    temperatureElement.classList.add('temperature');\n\n    const minTemp = Math.round(firstItem.main.temp_min);\n    const maxTemp = Math.round(firstItem.main.temp_max);\n    temperatureElement.innerHTML = `<div class=\"temperature__deg\"><div class=\"temperature__design\">min</div>\n                    <div class=\"temperature__data\"> ${minTemp}&deg;C</div></div><span class=\"temperature__line\"></span><div class=\"temperature__deg\"><div class=\"temperature__design\" > max</div>\n                <div class=\"temperature__data\"> ${maxTemp}&deg;C</div></div>`;\n    allInfo.appendChild(temperatureElement);\n    const moreButton = document.createElement('button');\n    moreButton.classList.add('more-btn');\n    moreButton.innerHTML = 'more info';\n    allInfo.appendChild(moreButton);\n    forecastItems.appendChild(allInfo);\n  }\n}\n\nfunction getDayOfWeek(timestamp) {\n  const date = new Date(timestamp * 1000);\n  const daysOfWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return daysOfWeek[date.getDay()];\n}\n\nfunction formatDate(date) {\n  const options = { month: 'short', day: 'numeric' };\n  return date.toLocaleDateString('en-US', options);\n}\nconst searchBarInput = document.querySelector('.search-bar_input');\n\nsearchBarInput.addEventListener('input', function () {\n  city = searchBarInput.value;\n});\n\nfetchWeatherData(); // Fetch data initially with the default city value\n"],"names":["$2c73bca0d48a5792$var$apiUrl","$2c73bca0d48a5792$var$getDayOfWeek","timestamp","Date","getDay","$2c73bca0d48a5792$var$formatDate","date","toLocaleDateString","month","day","$2c73bca0d48a5792$var$searchBarInput","document","querySelector","addEventListener","city","value","async","response","fetch","data","forecastItems","getElementById","innerHTML","dayMap","tomorrow","setDate","getDate","list","forEach","item","dt","toDateString","push","day1","createElement","classList","add","firstItem","allInfo","dayElement","appendChild","iconElement","iconUrl","weather","icon","src","alt","temperatureElement","minTemp","Math","round","main","temp_min","maxTemp","temp_max","moreButton","$2c73bca0d48a5792$var$updateForecast","json","error","console","$2c73bca0d48a5792$var$fetchWeatherData"],"version":3,"file":"index.79022e12.js.map"}