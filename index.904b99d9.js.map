{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAEMC,EAAS,sDAAoEC,OADtE,SAC6D,WAAgBA,OAF3E,oC,SAIAC,I,OAAAA,EAAfC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,2FAAiBC,MAAMR,G,cAAvBO,EAAQE,EAAAC,K,SACKH,EAASI,O,OAE5BC,EAFUH,EAAAC,M,kDAIVG,QAAQC,MAAM,+BAA8BL,EAAAM,I,2DAPjBC,MAAAC,KAAAC,U,CAW/B,SAASN,EAAeO,GACtB,IAAMC,EAAgBC,SAASC,eAAe,oBAE9CF,EAAcG,UAAY,GAE1B,IAmDoBC,EAnDdC,EAAS,GAaf,IAAK,IAAMC,KAXXP,EAAKQ,KAAKC,SAAQ,SAAAC,GAChB,IACMC,EADO,IAAIC,KAAe,IAAVF,EAAKG,IACVC,eAEZR,EAAOK,KACVL,EAAOK,GAAO,IAGhBL,EAAOK,GAAKI,KAAKL,E,IAGDJ,EAAQ,CACHJ,SAASc,cAAc,OAC/BC,UAAUC,IAAI,yBAC3B,IAAMC,EAAYb,EAAOC,GAAK,GACxBa,EAAUlB,SAASc,cAAc,OACvCI,EAAQH,UAAUC,IAAI,aACtB,IAAMG,EAAanB,SAASc,cAAc,OAC1CK,EAAWJ,UAAUC,IAAI,OACzB,IAAMI,EAAO,IAAIV,KAAoB,IAAfO,EAAUN,IAChCQ,EAAWjB,UAAY,yBAEMtB,QA2BXuB,EA5BhBiB,OA6BEC,EAAa,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAPiB,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAEgBlB,EAAKmB,WArCnB,6BAA4C1C,OAAjB2C,EAAWH,GAAM,UAC9CF,EAAQM,YAAYL,GAEpB,IAAMM,EAAczB,SAASc,cAAc,OAC3CW,EAAYV,UAAUC,IAAI,UAC1B,IAAMU,EAAWT,EAAUU,QAAQ,GAAGC,KAChCC,EAAU,qCAA8CjD,OAAT8C,EAAS,WAC9DD,EAAYK,IAAMD,EAClBJ,EAAYM,IAAM,eAClBb,EAAQM,YAAYC,GAEpB,IAAMO,EAAqBhC,SAASc,cAAc,OAClDkB,EAAmBjB,UAAUC,IAAI,eACjC,IAAMiB,EAAUC,KAAKC,MAAMlB,EAAUmB,KAAKC,UACpCC,EAAUJ,KAAKC,MAAMlB,EAAUmB,KAAKG,UAC1CP,EAAmB9B,UAAY,mHAEGtB,OADEqD,EAAQ,6KACFrD,OAAR0D,EAAQ,sBAC1CpB,EAAQM,YAAYQ,GACpB,IAAMQ,EAAaxC,SAASc,cAAc,UAC1C0B,EAAWzB,UAAUC,IAAI,YACzBwB,EAAWtC,UAAY,YACvBgB,EAAQM,YAAYgB,GACpBzC,EAAcyB,YAAYN,E,EAiB9B,SAASK,EAAWpB,GAElB,OAAOA,EAAKsC,mBAAmB,QADf,CAAEC,MAAO,QAASjC,IAAK,W,aAjF1B5B,EAAgBc,MAAAC,KAAAC,U,CAqF/B8C,E","sources":["src/five-days.js"],"sourcesContent":["const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\nconst city = 'Dublin';\nconst apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}`;\n\nasync function fetchWeatherData() {\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    updateForecast(data);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n}\n\nfunction updateForecast(data) {\n  const forecastItems = document.getElementById('weather-forecast');\n\n  forecastItems.innerHTML = '';\n\n  const dayMap = {};\n\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000);\n    const day = date.toDateString();\n\n    if (!dayMap[day]) {\n      dayMap[day] = [];\n    }\n\n    dayMap[day].push(item);\n  });\n\n  for (const day in dayMap) {\n    const forecastItem = document.createElement('div');\n    forecastItem.classList.add('weather-forecast-item');\n    const firstItem = dayMap[day][0];\n    const allInfo = document.createElement('div');\n    allInfo.classList.add('all-about');\n    const dayElement = document.createElement('div');\n    dayElement.classList.add('day');\n    const date = new Date(firstItem.dt * 1000);\n    dayElement.innerHTML = `<div class=\"day-name\">${getDayOfWeek(\n      date\n    )}</div> <div class=\"date\">${formatDate(date)}</div>`;\n    allInfo.appendChild(dayElement);\n\n    const iconElement = document.createElement('img');\n    iconElement.classList.add('w-icon');\n    const iconCode = firstItem.weather[0].icon;\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    iconElement.src = iconUrl;\n    iconElement.alt = 'weather-icon';\n    allInfo.appendChild(iconElement);\n\n    const temperatureElement = document.createElement('div');\n    temperatureElement.classList.add('temperature');\n    const minTemp = Math.round(firstItem.main.temp_min);\n    const maxTemp = Math.round(firstItem.main.temp_max);\n    temperatureElement.innerHTML = `<div class=\"temperature__deg\"><div class=\"temperature__design\">min</div>\n      <div class=\"temperature__data\"> ${minTemp}&deg;C</div></div><span class=\"temperature__line\"></span><div class=\"temperature__deg\"><div class=\"temperature__design\" > max</div>\n    <div class=\"temperature__data\"> ${maxTemp}&deg;C</div></div>`;\n    allInfo.appendChild(temperatureElement);\n    const moreButton = document.createElement('button');\n    moreButton.classList.add('more-btn');\n    moreButton.innerHTML = 'more info';\n    allInfo.appendChild(moreButton);\n    forecastItems.appendChild(allInfo);\n  }\n}\n\nfunction getDayOfWeek(date) {\n  const daysOfWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return daysOfWeek[date.getDay()];\n}\n\nfunction formatDate(date) {\n  const options = { month: 'short', day: 'numeric' };\n  return date.toLocaleDateString('en-US', options);\n}\n\nfetchWeatherData();\n"],"names":["$bpxeT","parcelRequire","$6c600740bce8eb50$var$apiUrl","concat","$6c600740bce8eb50$var$_fetchWeatherData","$parcel$interopDefault","$2TvXO","mark","_callee","response","fetch","_ctx","sent","json","$6c600740bce8eb50$var$updateForecast","console","error","t0","apply","this","arguments","data","forecastItems","document","getElementById","innerHTML","date","dayMap","day1","list","forEach","item","day","Date","dt","toDateString","push","createElement","classList","add","firstItem","allInfo","dayElement","date1","daysOfWeek","getDay","$6c600740bce8eb50$var$formatDate","appendChild","iconElement","iconCode","weather","icon","iconUrl","src","alt","temperatureElement","minTemp","Math","round","main","temp_min","maxTemp","temp_max","moreButton","toLocaleDateString","month","$6c600740bce8eb50$var$fetchWeatherData"],"version":3,"file":"index.904b99d9.js.map"}