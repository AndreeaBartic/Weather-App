{"mappings":"AA+EA,SAASA,EAAaC,GAUpB,MATmB,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAEgBA,EAAKC,S,CAGzB,SAASC,EAAWF,GAElB,OAAOA,EAAKG,mBAAmB,QADf,CAAEC,MAAO,QAASC,IAAK,W,EAxFzCC,iBACE,IACE,MAAMC,QAAiBC,MAJZ,kHAaf,SAAwBC,GACtB,MAAMC,EAAgBC,SAASC,eAAe,oBAC9CF,EAAcG,UAAY,GAE1B,MAAMC,EAAS,GAETC,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAY,GAEtCT,EAAKU,KAAKC,SAAQC,IAChB,MAAMrB,EAAO,IAAIgB,KAAe,IAAVK,EAAKC,IACrBjB,EAAML,EAAKuB,eAEbvB,GAAQe,IACLD,EAAOT,KACVS,EAAOT,GAAO,IAGhBS,EAAOT,GAAKmB,KAAKH,G,IAIrB,IAAK,MAAMI,KAAOX,EAAQ,CACHH,SAASe,cAAc,OAC/BC,UAAUC,IAAI,yBAC3B,MAAMC,EAAYf,EAAOW,GAAK,GACxBK,EAAUnB,SAASe,cAAc,OACvCI,EAAQH,UAAUC,IAAI,aACtB,MAAMG,EAAapB,SAASe,cAAc,OAC1CK,EAAWJ,UAAUC,IAAI,OACzBG,EAAWlB,UAAY,yBAAyBd,EAC9C8B,EAAUP,+BACiBpB,EAC3B,IAAIc,KAAoB,IAAfa,EAAUP,aAErBQ,EAAQE,YAAYD,GAEpB,MAAME,EAActB,SAASe,cAAc,OAC3CO,EAAYN,UAAUC,IAAI,UAC1B,MACMM,EAAU,qCADCL,EAAUM,QAAQ,GAAGC,cAEtCH,EAAYI,IAAMH,EAClBD,EAAYK,IAAM,eAClBR,EAAQE,YAAYC,GAEpB,MAAMM,EAAqB5B,SAASe,cAAc,OAClDa,EAAmBZ,UAAUC,IAAI,eACjC,MAAMY,EAAgBX,EAAUY,KAAKC,SAC/BC,EAAgBd,EAAUY,KAAKG,SAC/BC,EAAUC,KAAKC,MAAMP,EAAgB,QACrCQ,EAAUF,KAAKC,MAAMJ,EAAgB,QAC3CJ,EAAmB1B,UAAY,mHACKgC,6KACFG,sBAClClB,EAAQE,YAAYO,GACpB,MAAMU,EAAatC,SAASe,cAAc,UAC1CuB,EAAWtB,UAAUC,IAAI,YACzBqB,EAAWpC,UAAY,YACvBiB,EAAQE,YAAYiB,GACpBvC,EAAcsB,YAAYF,E,EAjE1BoB,OAFmB3C,EAAS4C,O,CAG5B,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,E,EAqFlDE","sources":["src/five-days.js"],"sourcesContent":["const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\nconst city = 'Dublin';\n\nconst apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n\nasync function fetchWeatherData() {\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    updateForecast(data);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n}\n\nfunction updateForecast(data) {\n  const forecastItems = document.getElementById('weather-forecast');\n  forecastItems.innerHTML = '';\n\n  const dayMap = {};\n\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000);\n    const day = date.toDateString();\n\n    if (date >= tomorrow) {\n      if (!dayMap[day]) {\n        dayMap[day] = [];\n      }\n\n      dayMap[day].push(item);\n    }\n  });\n\n  for (const day in dayMap) {\n    const forecastItem = document.createElement('div');\n    forecastItem.classList.add('weather-forecast-item');\n    const firstItem = dayMap[day][0];\n    const allInfo = document.createElement('div');\n    allInfo.classList.add('all-about');\n    const dayElement = document.createElement('div');\n    dayElement.classList.add('day');\n    dayElement.innerHTML = `<div class=\"day-name\">${getDayOfWeek(\n      firstItem.dt\n    )}</div> <div class=\"date\">${formatDate(\n      new Date(firstItem.dt * 1000)\n    )}</div>`;\n    allInfo.appendChild(dayElement);\n\n    const iconElement = document.createElement('img');\n    iconElement.classList.add('w-icon');\n    const iconCode = firstItem.weather[0].icon;\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    iconElement.src = iconUrl;\n    iconElement.alt = 'weather-icon';\n    allInfo.appendChild(iconElement);\n\n    const temperatureElement = document.createElement('div');\n    temperatureElement.classList.add('temperature');\n    const minTempKelvin = firstItem.main.temp_min;\n    const maxTempKelvin = firstItem.main.temp_max;\n    const minTemp = Math.round(minTempKelvin - 273.15);\n    const maxTemp = Math.round(maxTempKelvin - 273.15);\n    temperatureElement.innerHTML = `<div class=\"temperature__deg\"><div class=\"temperature__design\">min</div>\n      <div class=\"temperature__data\"> ${minTemp}&deg;C</div></div><span class=\"temperature__line\"></span><div class=\"temperature__deg\"><div class=\"temperature__design\" > max</div>\n    <div class=\"temperature__data\"> ${maxTemp}&deg;C</div></div>`;\n    allInfo.appendChild(temperatureElement);\n    const moreButton = document.createElement('button');\n    moreButton.classList.add('more-btn');\n    moreButton.innerHTML = 'more info';\n    allInfo.appendChild(moreButton);\n    forecastItems.appendChild(allInfo);\n  }\n}\n\nfunction getDayOfWeek(date) {\n  const daysOfWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return daysOfWeek[date.getDay()];\n}\n\nfunction formatDate(date) {\n  const options = { month: 'short', day: 'numeric' };\n  return date.toLocaleDateString('en-US', options);\n}\n\nfetchWeatherData();\n"],"names":["$2c73bca0d48a5792$var$getDayOfWeek","date","getDay","$2c73bca0d48a5792$var$formatDate","toLocaleDateString","month","day","async","response","fetch","data","forecastItems","document","getElementById","innerHTML","dayMap","tomorrow","Date","setDate","getDate","list","forEach","item","dt","toDateString","push","day1","createElement","classList","add","firstItem","allInfo","dayElement","appendChild","iconElement","iconUrl","weather","icon","src","alt","temperatureElement","minTempKelvin","main","temp_min","maxTempKelvin","temp_max","minTemp","Math","round","maxTemp","moreButton","$2c73bca0d48a5792$var$updateForecast","json","error","console","$2c73bca0d48a5792$var$fetchWeatherData"],"version":3,"file":"index.82981355.js.map"}