{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAAMC,EAAS,mCAEXC,EAAS,G,SAEEC,I,OAAAA,EAAfC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAGUC,E,yEAFRN,EAAS,sDAAoEO,OAAdC,KAAK,WAAgBD,OAAPR,EAAO,iB,kBAE3DU,MAAMT,G,cAAvBM,EAAQI,EAAAC,K,SACKL,EAASM,O,OAE5BC,EAFUH,EAAAC,M,kDAIVG,QAAQC,MAAM,+BAA8BL,EAAAM,I,2DARjBC,MAAAC,KAAAC,U,CAY/B,SAASN,EAAeO,GACtB,IAAMC,EAAgBC,SAASC,eAAe,oBAC9CF,EAAcG,UAAY,GAE1B,IA0DoBC,EACdC,EA3DAC,EAAS,GAETC,EAAW,IAAIC,KAgBrB,IAAK,IAAMC,KAfXF,EAASG,QAAQH,EAASI,UAAY,GAEtCZ,EAAKa,KAAKC,SAAQ,SAAAC,GAChB,IAAMT,EAAO,IAAIG,KAAe,IAAVM,EAAKC,IACrBC,EAAMX,EAAKY,eAEbZ,GAAQE,IACLD,EAAOU,KACVV,EAAOU,GAAO,IAGhBV,EAAOU,GAAKE,KAAKJ,G,IAIHR,EAAQ,CACHL,SAASkB,cAAc,OAC/BC,UAAUC,IAAI,yBAC3B,IAAMC,EAAYhB,EAAOG,GAAK,GACxBc,EAAUtB,SAASkB,cAAc,OACvCI,EAAQH,UAAUC,IAAI,aACtB,IAAMG,EAAavB,SAASkB,cAAc,OAC1CK,EAAWJ,UAAUC,IAAI,OACzBG,EAAWrB,UAAY,yBAEMjB,QA8BXkB,EA/BhBkB,EAAUP,GAgCRV,cACAoB,EADApB,EAAO,IAAIG,KAAiB,IAAZJ,GACH,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAPiB,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAEgBC,EAAKqB,WAzCnB,6BAEAxC,OAF2ByC,EAC3B,IAAInB,KAAoB,IAAfc,EAAUP,KACnB,UACFQ,EAAQK,YAAYJ,GAEpB,IAAMK,EAAc5B,SAASkB,cAAc,OAC3CU,EAAYT,UAAUC,IAAI,UAC1B,IAAMS,EAAWR,EAAUS,QAAQ,GAAGC,KAChCC,EAAU,qCAA8C/C,OAAT4C,EAAS,WAC9DD,EAAYK,IAAMD,EAClBJ,EAAYM,IAAM,eAClBZ,EAAQK,YAAYC,GAEpB,IAAMO,EAAqBnC,SAASkB,cAAc,OAClDiB,EAAmBhB,UAAUC,IAAI,eAEjC,IAAMgB,EAAUC,KAAKC,MAAMjB,EAAUkB,KAAKC,UACpCC,EAAUJ,KAAKC,MAAMjB,EAAUkB,KAAKG,UAC1CP,EAAmBjC,UAAY,iIAEejB,OADImD,EAAQ,yLACJnD,OAARwD,EAAQ,sBACtDnB,EAAQK,YAAYQ,GACpB,IAAMQ,EAAa3C,SAASkB,cAAc,UAC1CyB,EAAWxB,UAAUC,IAAI,YACzBuB,EAAWzC,UAAY,YACvBoB,EAAQK,YAAYgB,GACpB5C,EAAc4B,YAAYL,E,EAkB9B,SAASI,EAAWtB,GAElB,OAAOA,EAAKwC,mBAAmB,QADf,CAAEC,MAAO,QAAS9B,IAAK,W,CAGzC,IAAM+B,EAAiB9C,SAAS+C,cAAc,qBAE9CD,EAAeE,iBAAiB,SAAS,WACvC9D,KAAO4D,EAAeG,K,eA/FTtE,EAAgBgB,MAAAC,KAAAC,U,CAkG/BqD,E","sources":["src/five-days.js"],"sourcesContent":["const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\n\nlet apiUrl = '';\n\nasync function fetchWeatherData() {\n  apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n\n    updateForecast(data);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n}\n\nfunction updateForecast(data) {\n  const forecastItems = document.getElementById('weather-forecast');\n  forecastItems.innerHTML = '';\n\n  const dayMap = {};\n\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  data.list.forEach(item => {\n    const date = new Date(item.dt * 1000);\n    const day = date.toDateString();\n\n    if (date >= tomorrow) {\n      if (!dayMap[day]) {\n        dayMap[day] = [];\n      }\n\n      dayMap[day].push(item);\n    }\n  });\n\n  for (const day in dayMap) {\n    const forecastItem = document.createElement('div');\n    forecastItem.classList.add('weather-forecast-item');\n    const firstItem = dayMap[day][0];\n    const allInfo = document.createElement('div');\n    allInfo.classList.add('all-about');\n    const dayElement = document.createElement('div');\n    dayElement.classList.add('day');\n    dayElement.innerHTML = `<div class=\"day-name\">${getDayOfWeek(\n      firstItem.dt\n    )}</div> <div class=\"date\">${formatDate(\n      new Date(firstItem.dt * 1000)\n    )}</div>`;\n    allInfo.appendChild(dayElement);\n\n    const iconElement = document.createElement('img');\n    iconElement.classList.add('w-icon');\n    const iconCode = firstItem.weather[0].icon;\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    iconElement.src = iconUrl;\n    iconElement.alt = 'weather-icon';\n    allInfo.appendChild(iconElement);\n\n    const temperatureElement = document.createElement('div');\n    temperatureElement.classList.add('temperature');\n\n    const minTemp = Math.round(firstItem.main.temp_min);\n    const maxTemp = Math.round(firstItem.main.temp_max);\n    temperatureElement.innerHTML = `<div class=\"temperature__deg\"><div class=\"temperature__design\">min</div>\n                    <div class=\"temperature__data\"> ${minTemp}&deg;C</div></div><span class=\"temperature__line\"></span><div class=\"temperature__deg\"><div class=\"temperature__design\" > max</div>\n                <div class=\"temperature__data\"> ${maxTemp}&deg;C</div></div>`;\n    allInfo.appendChild(temperatureElement);\n    const moreButton = document.createElement('button');\n    moreButton.classList.add('more-btn');\n    moreButton.innerHTML = 'more info';\n    allInfo.appendChild(moreButton);\n    forecastItems.appendChild(allInfo);\n  }\n}\n\nfunction getDayOfWeek(timestamp) {\n  const date = new Date(timestamp * 1000);\n  const daysOfWeek = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return daysOfWeek[date.getDay()];\n}\n\nfunction formatDate(date) {\n  const options = { month: 'short', day: 'numeric' };\n  return date.toLocaleDateString('en-US', options);\n}\nconst searchBarInput = document.querySelector('.search-bar_input');\n\nsearchBarInput.addEventListener('input', function () {\n  city = searchBarInput.value;\n});\n\nfetchWeatherData(); // Fetch data initially with the default city value\n"],"names":["$bpxeT","parcelRequire","$6c600740bce8eb50$var$apiKey","$6c600740bce8eb50$var$apiUrl","$6c600740bce8eb50$var$_fetchWeatherData","$parcel$interopDefault","$2TvXO","mark","_callee","response","concat","city","fetch","_ctx","sent","json","$6c600740bce8eb50$var$updateForecast","console","error","t0","apply","this","arguments","data","forecastItems","document","getElementById","innerHTML","timestamp","date","dayMap","tomorrow","Date","day1","setDate","getDate","list","forEach","item","dt","day","toDateString","push","createElement","classList","add","firstItem","allInfo","dayElement","daysOfWeek","getDay","$6c600740bce8eb50$var$formatDate","appendChild","iconElement","iconCode","weather","icon","iconUrl","src","alt","temperatureElement","minTemp","Math","round","main","temp_min","maxTemp","temp_max","moreButton","toLocaleDateString","month","$6c600740bce8eb50$var$searchBarInput","querySelector","addEventListener","value","$6c600740bce8eb50$var$fetchWeatherData"],"version":3,"file":"index.99aea74d.js.map"}