{"mappings":"YAAO,SAASA,EAAeC,GAC7B,IACMC,EAAc,gDAAsEC,OAAtBF,EAAS,eAA4BE,OADlF,8CACkF,eAEzG,OAAOC,MAAMF,GACVG,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACJ,GAAIA,GAAQA,EAAKC,SAAWD,EAAKC,QAAQC,OAAS,EAChD,OAAOF,EAAKC,QAAQ,GAAGE,KAAKC,KAE9B,MAAM,IAAIC,MAAM,qC,ICRtBC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,eAC9BC,EAAiBJ,SAASG,cAAc,qBACxCE,EAAWL,SAASG,cAAc,8BAClCG,EAAgBN,SAASG,cAAc,mBACzCI,EAAuB,EACrBC,EAAWC,OAAOC,YAAc,IAAM,IAAM,IAmElD,SAASC,EAAeC,GACtB,IAAIC,EAAa,EACjBP,EAAcQ,iBAAiB,mBAAmBC,SAAQ,SAAAC,GACxDH,GACEG,EAAKC,YAAcC,SAAST,OAAOU,iBAAiBH,GAAMI,Y,IAG5C,SAAdR,GAAwBL,EAAuBC,GAAYK,EAC7DN,GAAwBC,EACD,SAAdI,GAAwBL,EAAuB,IACxDA,GAAwBC,GAE1BF,EAAce,MAAMC,UAAY,cAAmCjC,OAArBkB,EAAqB,M,CA7ErEL,EAAKD,iBAAiB,UAAU,SAAUsB,GACxCA,EAAMC,iBACN,IAAMrC,EAAWiB,EAAeqB,MAAMC,OAClCvC,GAmBN,SAAsBA,GACpB,IAAMwC,EAAS,mCACTC,EAAM,qDAAuEvC,OAAlBF,EAAS,WAAgBE,OAAPsC,GACnFrC,MAAMsC,GACHrC,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACa,MAAbA,EAAKmC,IACP3C,EAAeC,GACZI,MAAK,SAAAuC,GACJ9B,SAAS+B,KAAKV,MAAMW,gBAAkB,OAAgB3C,OAATyC,EAAS,KACtD9B,SAAS+B,KAAKV,MAAMY,eAAiB,QACrCjC,SAAS+B,KAAKV,MAAMa,mBAAqB,SACzClC,SAAS+B,KAAKV,MAAMc,iBAAmB,W,IAExCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,6BAA8BA,E,IAGhDE,MAAM7C,EAAK8C,Q,IAGdJ,OAAM,SAAAC,GACLC,QAAQD,MAAM,+BAAgCA,E,IAxChDI,CAAatD,E,IAIjBkB,EAASJ,iBAAiB,SAAS,WACjC,IAAMd,EAAWiB,EAAeqB,MAAMC,OAClCvC,IAsCN,SAA2BA,GACzB,IAAMuD,EAAQpC,EAAcQ,iBAAiB,mBACxC6B,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYN,EAAKO,OAAAC,cAAjBP,GAAAI,EAAAC,EAAQG,QAAAC,MAART,GAAQ,EAAW,CACtB,GADGI,EAAQtB,MACF4B,YAAY3B,OAAO4B,gBAAkBnE,EAASmE,cACrD,OAAO,C,WAFNV,GAAQ,EAARC,EAAQU,C,aAARZ,GAAQ,MAARK,EAAQQ,QAARR,EAAQQ,Q,YAARZ,E,MAAAC,C,EAKL,OAAO,C,CA7CUY,CAAkBtE,IAgDrC,SAAwBA,GACtB,IAAMuE,EAAW1D,SAAS2D,cAAc,MACxCD,EAASE,UAAUC,IAAI,kBACvBH,EAASL,YAAclE,EACvBmB,EAAcwD,YAAYJ,E,CAnDxBK,CAAe5E,E,IAInBa,SACGG,cAAc,uBACdF,iBAAiB,SAAS,W,OAAMU,EAAe,O,IAClDX,SACGG,cAAc,uBACdF,iBAAiB,SAAS,W,OAAMU,EAAe,O","sources":["src/background.js","src/search-bar.js"],"sourcesContent":["export function fetchCityImage(cityName) {\n  const unsplashApiKey = '3eLdLI3McT-xMd_k4uMgU6VIED8TAquFAmIAMFjfgHU';\n  const unsplashUrl = `https://api.unsplash.com/search/photos?query=${cityName}&client_id=${unsplashApiKey}&per_page=1`;\n\n  return fetch(unsplashUrl)\n    .then(response => response.json())\n    .then(data => {\n      if (data && data.results && data.results.length > 0) {\n        return data.results[0].urls.full;\n      }\n      throw new Error('No image found for the given city.');\n    });\n}\n","import { fetchCityImage } from './background.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.search-bar');\n  const searchBarInput = document.querySelector('.search-bar_input');\n  const starIcon = document.querySelector('.search-bar_favorites-icon');\n  const favoritesList = document.querySelector('.favorites_list');\n  let currentSlidePosition = 0;\n  const maxSlide = window.innerWidth <= 767 ? 150 : 350;\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n    const cityName = searchBarInput.value.trim();\n    if (cityName) {\n      fetchWeather(cityName);\n    }\n  });\n\n  starIcon.addEventListener('click', function () {\n    const cityName = searchBarInput.value.trim();\n    if (cityName && !isCityInFavorites(cityName)) {\n      addToFavorites(cityName);\n    }\n  });\n\n  document\n    .querySelector('.favorites_prev-btn')\n    .addEventListener('click', () => slideFavorites('prev'));\n  document\n    .querySelector('.favorites_next-btn')\n    .addEventListener('click', () => slideFavorites('next'));\n\n  function fetchWeather(cityName) {\n    const apiKey = '07aed853a2b3116bf7e19dfeee63b968';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.cod === 200) {\n          fetchCityImage(cityName)\n            .then(imageUrl => {\n              document.body.style.backgroundImage = `url(${imageUrl})`;\n              document.body.style.backgroundSize = 'cover';\n              document.body.style.backgroundPosition = 'center';\n              document.body.style.backgroundRepeat = 'no-repeat';\n            })\n            .catch(error => {\n              console.error('Error fetching city image:', error);\n            });\n        } else {\n          alert(data.message);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n      });\n  }\n\n  function isCityInFavorites(cityName) {\n    const items = favoritesList.querySelectorAll('.favorites_item');\n    for (let item of items) {\n      if (item.textContent.trim().toLowerCase() === cityName.toLowerCase()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function addToFavorites(cityName) {\n    const listItem = document.createElement('li');\n    listItem.classList.add('favorites_item');\n    listItem.textContent = cityName;\n    favoritesList.appendChild(listItem);\n  }\n\n  function slideFavorites(direction) {\n    let totalWidth = 0;\n    favoritesList.querySelectorAll('.favorites_item').forEach(item => {\n      totalWidth +=\n        item.offsetWidth + parseInt(window.getComputedStyle(item).marginRight);\n    });\n\n    if (direction === 'next' && currentSlidePosition - maxSlide > -totalWidth) {\n      currentSlidePosition -= maxSlide;\n    } else if (direction === 'prev' && currentSlidePosition < 0) {\n      currentSlidePosition += maxSlide;\n    }\n    favoritesList.style.transform = `translateX(${currentSlidePosition}px)`;\n  }\n});\n"],"names":["$48659db332377dd8$export$a9bd09813a73c79a","cityName","unsplashUrl","concat","fetch","then","response","json","data","results","length","urls","full","Error","document","addEventListener","form","querySelector","searchBarInput","starIcon","favoritesList","currentSlidePosition","maxSlide","window","innerWidth","slideFavorites","direction","totalWidth","querySelectorAll","forEach","item","offsetWidth","parseInt","getComputedStyle","marginRight","style","transform","event","preventDefault","value","trim","apiKey","url","cod","imageUrl","body","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","catch","error","console","alert","message","fetchWeather","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","textContent","toLowerCase","err","return","isCityInFavorites","listItem","createElement","classList","add","appendChild","addToFavorites"],"version":3,"file":"index.82469246.js.map"}